Timestamp,Informed Consent ,"Have you ever worked with robotics software? (e.g., development, testing, research)","Guideline I4. Isolation of components is an important feature to enable field-based testing (by following the ``let it crash"" philosophy introduced by Netflix web:chaos-monkey) while avoiding the crash of the system. Isolation permits catching immediately the component that is crashing and executing countermeasures to keep the system up. Examples of solutions for isolation are: (i) the use of proxy nodes of ROSRV (git: cansuerdogan/ROSRV), or (ii) introducing intermediary nodes between original nodes by exploiting the topic remapping functionality (wiki: remap) of ROSMonitoring (git: autonomy-and-verification-uol/ROSMonitoring), which enables swapping topic names just before running the application.

To which extent do you agree that this guideline is ...?  [Useful.]","Guideline I4. Isolation of components is an important feature to enable field-based testing (by following the ``let it crash"" philosophy introduced by Netflix web:chaos-monkey) while avoiding the crash of the system. Isolation permits catching immediately the component that is crashing and executing countermeasures to keep the system up. Examples of solutions for isolation are: (i) the use of proxy nodes of ROSRV (git: cansuerdogan/ROSRV), or (ii) introducing intermediary nodes between original nodes by exploiting the topic remapping functionality (wiki: remap) of ROSMonitoring (git: autonomy-and-verification-uol/ROSMonitoring), which enables swapping topic names just before running the application.

To which extent do you agree that this guideline is ...?  [Clearly formulated]","Guideline I4. Isolation of components is an important feature to enable field-based testing (by following the ``let it crash"" philosophy introduced by Netflix web:chaos-monkey) while avoiding the crash of the system. Isolation permits catching immediately the component that is crashing and executing countermeasures to keep the system up. Examples of solutions for isolation are: (i) the use of proxy nodes of ROSRV (git: cansuerdogan/ROSRV), or (ii) introducing intermediary nodes between original nodes by exploiting the topic remapping functionality (wiki: remap) of ROSMonitoring (git: autonomy-and-verification-uol/ROSMonitoring), which enables swapping topic names just before running the application.

To which extent do you agree that this guideline is ...?  [Applicable to ROS-based systems that you've worked with.]",Do we miss any guideline or do you have any suggestion for improvement? Please elaborate.,"SDB1. The QA team should be prepared to specify properties using unambiguous and precise languages like logic-based languages, as often required by verification tools. User-friendly instruments, like specification patterns (web: ps-patterns), might facilitate the error-prone specification process and make the specification accessible to people lacking expertise in logic. For example, HAROS (git: git-afsantos/haros) uses a logic-based language called HPL for property specification that is used to synthesize runtime monitors for testing and verification.

To which extent do you agree that this guideline is ...?  [Useful.]","SDB1. The QA team should be prepared to specify properties using unambiguous and precise languages like logic-based languages, as often required by verification tools. User-friendly instruments, like specification patterns (web: ps-patterns), might facilitate the error-prone specification process and make the specification accessible to people lacking expertise in logic. For example, HAROS (git: git-afsantos/haros) uses a logic-based language called HPL for property specification that is used to synthesize runtime monitors for testing and verification.

To which extent do you agree that this guideline is ...?  [Clearly formulated.]","SDB1. The QA team should be prepared to specify properties using unambiguous and precise languages like logic-based languages, as often required by verification tools. User-friendly instruments, like specification patterns (web: ps-patterns), might facilitate the error-prone specification process and make the specification accessible to people lacking expertise in logic. For example, HAROS (git: git-afsantos/haros) uses a logic-based language called HPL for property specification that is used to synthesize runtime monitors for testing and verification.

To which extent do you agree that this guideline is ...?  [Applicable to ROS-based systems that you've worked with.]","SDB2. In complement to logic-based instruments, the QA team may opt to use verification tools that allow code-like specifications of properties to simplify the definition of the desired behavior. For example, ROSMonitoring (git: autonomy-and-verification-uol/ROSMonitoring) allows for code-like specifications of properties in a domain specific language (DSL) targeted to the properties such as writing assertions over the robot's position using if-else constructs.  

To which extent do you agree that this guideline is ...?  [Useful.]","SDB2. In complement to logic-based instruments, the QA team may opt to use verification tools that allow code-like specifications of properties to simplify the definition of the desired behavior. For example, ROSMonitoring (git: autonomy-and-verification-uol/ROSMonitoring) allows for code-like specifications of properties in a domain specific language (DSL) targeted to the properties such as writing assertions over the robot's position using if-else constructs.  

To which extent do you agree that this guideline is ...?  [Clearly formulated.]","SDB2. In complement to logic-based instruments, the QA team may opt to use verification tools that allow code-like specifications of properties to simplify the definition of the desired behavior. For example, ROSMonitoring (git: autonomy-and-verification-uol/ROSMonitoring) allows for code-like specifications of properties in a domain specific language (DSL) targeted to the properties such as writing assertions over the robot's position using if-else constructs.  

To which extent do you agree that this guideline is ...?  [Applicable to ROS-based systems that you've worked with.]","SDB3. The QA team might integrate scenario specification languages and tools to enable a systematic exploration of real-world situations and conditions for ROS-based applications. For example, Geoscenario (git: rodrigoqueiroz/geoscenarioserver) uses behavior trees to program dynamic interactions between the system-under-test and other vehicles in the scenario. In addition, SCENIC (git: BerkeleyLearnVerify/Scenic) is a probability-based programming language that enables the specification of rare events in environment models that are used to generate test cases for vehicles running on the CARLA simulator (git: carla-simulator/carla) that may be further integrated to testing ROS-based systems.

To which extent do you agree that this guideline is ...?  [Useful.]","SDB3. The QA team might integrate scenario specification languages and tools to enable a systematic exploration of real-world situations and conditions for ROS-based applications. For example, Geoscenario (git: rodrigoqueiroz/geoscenarioserver) uses behavior trees to program dynamic interactions between the system-under-test and other vehicles in the scenario. In addition, SCENIC (git: BerkeleyLearnVerify/Scenic) is a probability-based programming language that enables the specification of rare events in environment models that are used to generate test cases for vehicles running on the CARLA simulator (git: carla-simulator/carla) that may be further integrated to testing ROS-based systems.

To which extent do you agree that this guideline is ...?  [Clearly formulated.]","SDB3. The QA team might integrate scenario specification languages and tools to enable a systematic exploration of real-world situations and conditions for ROS-based applications. For example, Geoscenario (git: rodrigoqueiroz/geoscenarioserver) uses behavior trees to program dynamic interactions between the system-under-test and other vehicles in the scenario. In addition, SCENIC (git: BerkeleyLearnVerify/Scenic) is a probability-based programming language that enables the specification of rare events in environment models that are used to generate test cases for vehicles running on the CARLA simulator (git: carla-simulator/carla) that may be further integrated to testing ROS-based systems.

To which extent do you agree that this guideline is ...?  [Applicable to ROS-based systems that you've worked with.]",Do we miss any guideline or do you have any suggestion for improvement? Please elaborate.,"GMTC1. The QA team can use tools that generate noise or inject faults to gain confidence that a robotic system will behave safely when faced with unexpected situations. For instance, RoboFuzz (git: sslab-gatech/RoboFuzz) enables the generation of faults (in ROS 2 applications) through message mutation with three intents: violation of physical laws, violation of user-specified properties, and cyber-physical discrepancies. Moreover, RosPenTo (git: jr-robotics/ROSPenTo) enables security assessment by (un-) registering publishers or subscribers, isolating nodes or services, and injecting false data in the messages in ROS 1 applications.

To which extent do you agree that this guideline is ...?  [Useful.]","GMTC1. The QA team can use tools that generate noise or inject faults to gain confidence that a robotic system will behave safely when faced with unexpected situations. For instance, RoboFuzz (git: sslab-gatech/RoboFuzz) enables the generation of faults (in ROS 2 applications) through message mutation with three intents: violation of physical laws, violation of user-specified properties, and cyber-physical discrepancies. Moreover, RosPenTo (git: jr-robotics/ROSPenTo) enables security assessment by (un-) registering publishers or subscribers, isolating nodes or services, and injecting false data in the messages in ROS 1 applications.

To which extent do you agree that this guideline is ...?  [Clearly formulated.]","GMTC1. The QA team can use tools that generate noise or inject faults to gain confidence that a robotic system will behave safely when faced with unexpected situations. For instance, RoboFuzz (git: sslab-gatech/RoboFuzz) enables the generation of faults (in ROS 2 applications) through message mutation with three intents: violation of physical laws, violation of user-specified properties, and cyber-physical discrepancies. Moreover, RosPenTo (git: jr-robotics/ROSPenTo) enables security assessment by (un-) registering publishers or subscribers, isolating nodes or services, and injecting false data in the messages in ROS 1 applications.

To which extent do you agree that this guideline is ...?  [Applicable to ROS-based systems that you've worked with.]","GMTC2. The QA team should exploit automation tools for test case generation, test case selection and oracle generation, as well as other testing activities, to efficiently gain confidence in ROS-based systems in the field. For example, Mithra (pdf: AfzalMithra.pdf) learns oracles from logs generated during the execution, it is motivated by a case from ArduPilot and tested in autonomous racing cars built on ROS. In addition, HAROS (git: git-afsantos/haros) promotes test case generation from properties using a tool called Hypothesis (git: HypothesisWorks/hypothesis). Finally, a technical report (pdf: 2022-iros-roboticstesting.pdf) details how a company building mobile robots for disinfection uses equivalence partitioning for test case selection for the field.

To which extent do you agree that this guideline is ...?  [Useful.]","GMTC2. The QA team should exploit automation tools for test case generation, test case selection and oracle generation, as well as other testing activities, to efficiently gain confidence in ROS-based systems in the field. For example, Mithra (pdf: AfzalMithra.pdf) learns oracles from logs generated during the execution, it is motivated by a case from ArduPilot and tested in autonomous racing cars built on ROS. In addition, HAROS (git: git-afsantos/haros) promotes test case generation from properties using a tool called Hypothesis (git: HypothesisWorks/hypothesis). Finally, a technical report (pdf: 2022-iros-roboticstesting.pdf) details how a company building mobile robots for disinfection uses equivalence partitioning for test case selection for the field.

To which extent do you agree that this guideline is ...?  [Clearly formulated.]","GMTC2. The QA team should exploit automation tools for test case generation, test case selection and oracle generation, as well as other testing activities, to efficiently gain confidence in ROS-based systems in the field. For example, Mithra (pdf: AfzalMithra.pdf) learns oracles from logs generated during the execution, it is motivated by a case from ArduPilot and tested in autonomous racing cars built on ROS. In addition, HAROS (git: git-afsantos/haros) promotes test case generation from properties using a tool called Hypothesis (git: HypothesisWorks/hypothesis). Finally, a technical report (pdf: 2022-iros-roboticstesting.pdf) details how a company building mobile robots for disinfection uses equivalence partitioning for test case selection for the field.

To which extent do you agree that this guideline is ...?  [Applicable to ROS-based systems that you've worked with.]",Do we miss any guideline or do you have any suggestion for improvement? Please elaborate.,"PE1. The use of runtime verification or field-based techniques might add computation overhead. The QA team should understand how much overhead is acceptable; this is important to decide on a test strategy that will not severely impact the performance of the running system. Such overhead may be due to monitoring with ros2_tracing (git: ros2/ros2_tracing), component isolation, or security and privacy maintenance overhead with ROSploit (git: seanrivera/rosploit).

To which extent do you agree that this guideline is ...?  [Useful.]","PE1. The use of runtime verification or field-based techniques might add computation overhead. The QA team should understand how much overhead is acceptable; this is important to decide on a test strategy that will not severely impact the performance of the running system. Such overhead may be due to monitoring with ros2_tracing (git: ros2/ros2_tracing), component isolation, or security and privacy maintenance overhead with ROSploit (git: seanrivera/rosploit).

To which extent do you agree that this guideline is ...?  [Clearly formulated.]","PE1. The use of runtime verification or field-based techniques might add computation overhead. The QA team should understand how much overhead is acceptable; this is important to decide on a test strategy that will not severely impact the performance of the running system. Such overhead may be due to monitoring with ros2_tracing (git: ros2/ros2_tracing), component isolation, or security and privacy maintenance overhead with ROSploit (git: seanrivera/rosploit).

To which extent do you agree that this guideline is ...?  [Applicable to ROS-based systems that you've worked with.]","PE2. The QA team might create and exploit models of the system and/or of its environment (a sort of digital twin) for runtime assessment, predictive maintenance, checking alternatives, and so on. For example, they can create a digital twin of the system by using CPSAML (me-big-tuwien-ac-at/cpsaml), or formal tools such as UPPAAL combined with UPPAALTron (doi: 10.1109/ECMR.2015.7324210). In addition, the QA team may use ROS metamodels (ipa-nhg/ros-model) to facilitate the use of tools and graphical plug-ins for reverse engineering models from ROS code. 

To which extent do you agree that this guideline is ...?  [Useful.]","PE2. The QA team might create and exploit models of the system and/or of its environment (a sort of digital twin) for runtime assessment, predictive maintenance, checking alternatives, and so on. For example, they can create a digital twin of the system by using CPSAML (me-big-tuwien-ac-at/cpsaml), or formal tools such as UPPAAL combined with UPPAALTron (doi: 10.1109/ECMR.2015.7324210). In addition, the QA team may use ROS metamodels (ipa-nhg/ros-model) to facilitate the use of tools and graphical plug-ins for reverse engineering models from ROS code. 

To which extent do you agree that this guideline is ...?  [Clearly formulated.]","PE2. The QA team might create and exploit models of the system and/or of its environment (a sort of digital twin) for runtime assessment, predictive maintenance, checking alternatives, and so on. For example, they can create a digital twin of the system by using CPSAML (me-big-tuwien-ac-at/cpsaml), or formal tools such as UPPAAL combined with UPPAALTron (doi: 10.1109/ECMR.2015.7324210). In addition, the QA team may use ROS metamodels (ipa-nhg/ros-model) to facilitate the use of tools and graphical plug-ins for reverse engineering models from ROS code. 

To which extent do you agree that this guideline is ...?  [Applicable to ROS-based systems that you've worked with.]",Do we miss any guideline or do you have any suggestion for improvement? Please elaborate.,"SE1. When running exploratory field testing, the QA team should use record-and-playback in order to keep track of the explored field scenarios, simplify error analysis, find and reproduce corner cases, and help with parameter tuning. The standard tool for record-and-playback in ROS is rosbag (wiki: rosbag) but there are a few tool derivations supporting effective record-and-playback. For example, Rerun.io (git: rerun-io/rerun) promotes a graphical interface with a focus on the visualization of bag data leveraging common datatypes used on perception algorithms. In addition, NuBots (git: NUbots/NUbots) uses a genetic algorithm for tuning parameters for the RoboCup over data collected in field explorations after data bags.

To which extent do you agree that this guideline is ...?  [Useful.]","SE1. When running exploratory field testing, the QA team should use record-and-playback in order to keep track of the explored field scenarios, simplify error analysis, find and reproduce corner cases, and help with parameter tuning. The standard tool for record-and-playback in ROS is rosbag (wiki: rosbag) but there are a few tool derivations supporting effective record-and-playback. For example, Rerun.io (git: rerun-io/rerun) promotes a graphical interface with a focus on the visualization of bag data leveraging common datatypes used on perception algorithms. In addition, NuBots (git: NUbots/NUbots) uses a genetic algorithm for tuning parameters for the RoboCup over data collected in field explorations after data bags.

To which extent do you agree that this guideline is ...?  [Clearly formulated]","SE1. When running exploratory field testing, the QA team should use record-and-playback in order to keep track of the explored field scenarios, simplify error analysis, find and reproduce corner cases, and help with parameter tuning. The standard tool for record-and-playback in ROS is rosbag (wiki: rosbag) but there are a few tool derivations supporting effective record-and-playback. For example, Rerun.io (git: rerun-io/rerun) promotes a graphical interface with a focus on the visualization of bag data leveraging common datatypes used on perception algorithms. In addition, NuBots (git: NUbots/NUbots) uses a genetic algorithm for tuning parameters for the RoboCup over data collected in field explorations after data bags.

To which extent do you agree that this guideline is ...?  [Applicable to ROS-based systems that you've worked with.]","SE2. When it is possible to test or verify without human supervision, the QA team should prioritize headless simulation to avoid unnecessary overhead, enable large-scale experimentation, and facilitate integration with CI/CD pipelines. Example of tools supporting headless simulation are Gazebo (git: gazebosim/gz-sim), V-REP (wiki: vrep_ros_bridge), ARGOS (web: argos-sim), MORSE (web: morse-simulator), and MVSim (git: MRPT/mvsim). As a complement, OpenDaVINCI (git: se-research/OpenDaVINCI) interfaces with ROS and has been widely used for testing autonomous driving systems.

To which extent do you agree that this guideline is ...?  [Useful.]","SE2. When it is possible to test or verify without human supervision, the QA team should prioritize headless simulation to avoid unnecessary overhead, enable large-scale experimentation, and facilitate integration with CI/CD pipelines. Example of tools supporting headless simulation are Gazebo (git: gazebosim/gz-sim), V-REP (wiki: vrep_ros_bridge), ARGOS (web: argos-sim), MORSE (web: morse-simulator), and MVSim (git: MRPT/mvsim). As a complement, OpenDaVINCI (git: se-research/OpenDaVINCI) interfaces with ROS and has been widely used for testing autonomous driving systems.

To which extent do you agree that this guideline is ...?  [Clearly formulated.]","SE2. When it is possible to test or verify without human supervision, the QA team should prioritize headless simulation to avoid unnecessary overhead, enable large-scale experimentation, and facilitate integration with CI/CD pipelines. Example of tools supporting headless simulation are Gazebo (git: gazebosim/gz-sim), V-REP (wiki: vrep_ros_bridge), ARGOS (web: argos-sim), MORSE (web: morse-simulator), and MVSim (git: MRPT/mvsim). As a complement, OpenDaVINCI (git: se-research/OpenDaVINCI) interfaces with ROS and has been widely used for testing autonomous driving systems.

To which extent do you agree that this guideline is ...?  [Applicable to ROS-based systems that you've worked with.]",Do we miss any guideline or do you have any suggestion for improvement? Please elaborate.,"AR1. The QA team should perform postmortem analysis and diagnose of non-passing test cases to explain the failures to developers or refine the arguments and confidence in the robotic system. For example, ROS projects may use a combination of Nagios (web: nagios) and ros/diagnostics for monitoring, collecting and aggregating runtime data to diagnose failures. Moreover, CARE (git: softsys4ai/care) may be used for semi-automatic diagnosis of launch file misconfigurations or may rely on approaches such as Rason (git: lsa-pucrs/rason/) for multi-robot diagnosis.

To which extent do you agree that this guideline is ...?  [Useful.]","AR1. The QA team should perform postmortem analysis and diagnose of non-passing test cases to explain the failures to developers or refine the arguments and confidence in the robotic system. For example, ROS projects may use a combination of Nagios (web: nagios) and ros/diagnostics for monitoring, collecting and aggregating runtime data to diagnose failures. Moreover, CARE (git: softsys4ai/care) may be used for semi-automatic diagnosis of launch file misconfigurations or may rely on approaches such as Rason (git: lsa-pucrs/rason/) for multi-robot diagnosis.

To which extent do you agree that this guideline is ...?  [Clearly formulated.]","AR1. The QA team should perform postmortem analysis and diagnose of non-passing test cases to explain the failures to developers or refine the arguments and confidence in the robotic system. For example, ROS projects may use a combination of Nagios (web: nagios) and ros/diagnostics for monitoring, collecting and aggregating runtime data to diagnose failures. Moreover, CARE (git: softsys4ai/care) may be used for semi-automatic diagnosis of launch file misconfigurations or may rely on approaches such as Rason (git: lsa-pucrs/rason/) for multi-robot diagnosis.

To which extent do you agree that this guideline is ...?  [Applicable to ROS-based systems that you've worked with.]","AR2. The QA team should use reliable tools for field data management to avoid problems with corrupted, unreliable, and/or incomplete data. For example, the warehouse_ros package offers both MongoDB (git: ros-planning/warehouse_ros_mongo) and SQLite (git: ros-planning/warehouse_ros_sqlite) database backend for recording states, scenes, and messages. In addition, the Field Test Tool (git: fkie/field_test_tool) uses the PostgreSQL database manager extended with PostGIS for geolocalization.

To which extent do you agree that this guideline is ...?  [Useful.]","AR2. The QA team should use reliable tools for field data management to avoid problems with corrupted, unreliable, and/or incomplete data. For example, the warehouse_ros package offers both MongoDB (git: ros-planning/warehouse_ros_mongo) and SQLite (git: ros-planning/warehouse_ros_sqlite) database backend for recording states, scenes, and messages. In addition, the Field Test Tool (git: fkie/field_test_tool) uses the PostgreSQL database manager extended with PostGIS for geolocalization.

To which extent do you agree that this guideline is ...?  [Clearly formulated.]","AR2. The QA team should use reliable tools for field data management to avoid problems with corrupted, unreliable, and/or incomplete data. For example, the warehouse_ros package offers both MongoDB (git: ros-planning/warehouse_ros_mongo) and SQLite (git: ros-planning/warehouse_ros_sqlite) database backend for recording states, scenes, and messages. In addition, the Field Test Tool (git: fkie/field_test_tool) uses the PostgreSQL database manager extended with PostGIS for geolocalization.

To which extent do you agree that this guideline is ...?  [Applicable to ROS-based systems that you've worked with.]",Do we miss any guideline or do you have any suggestion for improvement? Please elaborate.,How long have you worked with robotics software? ,How does your work in robotics software relate to ROS (Robot Operating System)? ,Which type of organizations have you worked with robotics?,What robotics domains have you worked with?,"To receive the results of the study, please enter your email address. ",Could we contact you in case of follow-up questions?
2023/11/28 12:14:17 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,Yes,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,,Agree,Agree,Agree,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Fully agree,Agree,Agree,Agree,,5 -- 10 years,"I have contributed to ROS package(s) (e.g., development, testing)","Academia;Industry;Independent groups (e.g., Open Robotics, hobbists)",Service robotics;General-purpose,anonymous,"Yes, via my email address above"
2023/11/29 1:10:59 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,No,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,anonymous,
2023/11/30 6:52:46 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,Yes,Agree,Agree,Fully agree,,Agree,Fully agree,Disagree,Fully agree,Agree,Agree,Fully agree,Disagree,Agree,,Fully agree,Agree,Fully agree,Agree,Agree,Disagree,,Agree,Agree,Disagree,Fully agree,Agree,Fully disagree,,Agree,Agree,Agree,Fully agree,Agree,Fully agree,,Fully agree,Agree,Fully agree,Agree,Fully agree,Disagree,,3 -- 5 years,"I have contributed to ROS package(s) (e.g., development, testing)","Academia;Independent groups (e.g., Open Robotics, hobbists);Individually",Service robotics;General-purpose,anonymous,"Yes, via my email address above"
2023/12/04 9:21:57 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,Yes,Agree,Agree,Agree,,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Agree,Fully agree,Fully agree,Agree,,Fully agree,Fully agree,Agree,Fully agree,Fully agree,Agree,,< 1 year,I have worked on robotics applications that use ROS packages.,Academia;Individually,Industrial automation;General-purpose,anonymous,"Yes, via my email address above"
2023/12/05 5:56:20 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,Yes,Agree,Disagree,Agree,,Disagree,Disagree,Disagree,Disagree,Agree,Disagree,Agree,Agree,Disagree,"I wish QA teams could do such advanced tasks. Those are senior developers, not QA",Disagree,Agree,Agree,Disagree,Agree,Disagree,,Agree,Agree,Agree,Agree,Disagree,Disagree,,Agree,Agree,Agree,Fully agree,Agree,Agree,,Agree,Disagree,Agree,Agree,Agree,Agree,,> 10 years,I have worked on robotics applications that use ROS packages.,Academia;Industry,Service robotics;Marine robotics;Industrial automation,anonymous,No
2023/12/05 6:15:31 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,Yes,Agree,Agree,Agree,,Agree,Agree,Disagree,Agree,Agree,Agree,Agree,Agree,Disagree,,Agree,Agree,Agree,Agree,Agree,Agree,,Agree,Agree,Fully agree,Agree,Agree,Agree,,Agree,Agree,Agree,Agree,Agree,Agree,,Agree,Agree,Agree,Agree,Agree,Agree,,3 -- 5 years,I have worked on robotics applications that use ROS packages.,Academia,Marine robotics;Mobile robots,anonymous,"Yes, via my email address above"
2023/12/07 1:43:16 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.,Yes,Agree,Agree,Agree,,Disagree,Agree,Fully disagree,Agree,Agree,Fully disagree,Agree,Agree,Agree,,Agree,Agree,Disagree,Agree,Agree,Agree,,Agree,Agree,Agree,Agree,Agree,Fully disagree,,Agree,Agree,Disagree,Agree,Agree,Agree,,Agree,Agree,Disagree,Agree,Agree,Disagree,,> 10 years,I have worked on robotics applications that use ROS packages.,Academia,Service robotics;Marine robotics;General-purpose,anonymous,"Yes, via my email address above"
2023/12/07 10:13:06 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,Yes,Agree,Disagree,Disagree,Introducing proxy or nodes may decrease the real-time performance of the system,Fully agree,Fully agree,Agree,Agree,Disagree,Agree,Agree,Disagree,Disagree,,Agree,Agree,Agree,Disagree,Disagree,Disagree,,Fully agree,Agree,Agree,Disagree,Disagree,Fully disagree,,Agree,Agree,Agree,Disagree,Fully agree,Agree,,Fully agree,Fully agree,Fully agree,Agree,Agree,Agree,,> 10 years,"I have contributed to ROS package(s) (e.g., development, testing)",Academia,Marine robotics;Defense,anonymous,"Yes, via my email address above"
2023/12/08 12:51:50 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,Yes,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Agree,Disagree,Agree,,Fully agree,Agree,Fully agree,Agree,Agree,Agree,,Fully agree,Fully agree,Fully agree,Agree,Disagree,Disagree,,Fully agree,Fully agree,Fully agree,Fully agree,Agree,Fully agree,,Fully agree,Fully agree,Fully agree,Agree,Agree,Agree,,3 -- 5 years,I have worked on robotics applications that use ROS packages.,Academia,Service robotics;General-purpose,anonymous,"Yes, via my email address above"
2023/12/10 4:38:11 am EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,Yes,Agree,Agree,Agree,"Some nodes need to be tested much more extensively than others, because they are much more prone to failure or more safety-critical.",Disagree,Agree,Agree,Disagree,Agree,Agree,Disagree,Agree,Agree,"State machines are useful to the extent that the robot knows precisely what state it's in and there is a discrete set of transitions to choose from. However, the robot may not have a single state (ex: multimodal distribution of pose estimations.)  Furthermore, the vast majority of important control code pertains to the processes running within states, not to the transition logic between states. Don't make a state-based architecture and QA system if the majority of bugs don't have anything to do with state transitions.",Agree,Agree,Disagree,Agree,Agree,Disagree,"Noise injection etc. into real robot system is a good idea, but I have found it is easier to make a simulated environment with simulated noise. This has the advantage that the robot's noise calibration / bias estimation can be verified because there are no external (uncontrolled/unknown) sources of noise or faults.",Agree,Agree,Disagree,Agree,Agree,Disagree,"Fancy tools are nice, but most people will end up just using gazebo and rviz to do all visualization and ""digital twins"".",Agree,Agree,Agree,Disagree,Agree,Agree,Beware of running any simulation or replay headless until you are certain it will run correctly. I have seen many cases where the headless sim had unknown bugs that created bad data. The cost of GUIs is small until you scale up to running many simulations as part of a larger CI/CD pipeline.,Agree,Agree,Disagree,Agree,Agree,Disagree,The QA team won't know how to analyze/diagnose failed tests or bugs. At best they can try to categorize them before handing them to the engineers.,> 10 years,I have worked on robotics applications that use ROS packages.,"Academia;Industry;Independent groups (e.g., Open Robotics, hobbists);Individually",Marine robotics;Industrial automation;Construction;General-purpose,anonymous,"Yes, via my email address above"
2023/12/10 6:55:04 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,No,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,anonymous,
2023/12/11 5:15:07 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,Yes,Fully agree,Fully agree,Agree,,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Agree,,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Agree,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Agree,Fully agree,Fully agree,Fully agree,,1 -- 3 years,I have worked on robotics applications that use ROS packages.,Academia,Service robotics;Industrial automation,anonymous,"Yes, via my email address above"
2023/12/14 2:23:08 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,Yes,Fully agree,Agree,Agree,,Fully agree,Fully agree,Agree,Agree,Fully agree,Agree,Fully agree,Agree,Disagree,,Agree,Fully agree,Agree,Fully agree,Agree,Disagree,,Agree,Agree,Agree,Fully agree,Fully agree,Agree,,Agree,Fully agree,Agree,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Fully agree,Agree,Agree,Disagree,,< 1 year,I have worked on robotics applications that use ROS packages.,Academia,Service robotics,anonymous,"Yes, via my email address above"
2023/12/16 11:29:04 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.,Yes,Fully agree,Fully agree,Fully agree,The explanation is enough to understand that the isolation of components at the ROS level is very useful not only for testing purposes but also for the resilience of the system such as in ROSRV.,Fully agree,Agree,Agree,Fully agree,Agree,Agree,Fully agree,Agree,Agree,"I agree with the proposed guideline and it is useful to suggest from the beginning the use of formal languages for the specification of properties. Would ""formal languages"" should be enough instead of logic-based languages? ",Fully agree,Fully agree,Agree,Fully agree,Fully agree,Agree,,Fully agree,Fully agree,Agree,Fully agree,Fully agree,Agree,"In PE1, the references to ro2_tracing and ROSploit are related to possible causes of overhead. A great addition to these would be a reference to how the user could calculate this overhead. Would it be necessary to mention that it depends on the hardware involved? Have you considered probabilistic properties and their verification at runtime?",Fully agree,Fully agree,Agree,Fully agree,Fully agree,Agree,,Agree,Agree,Disagree,Agree,Agree,Agree,,3 -- 5 years,I have worked on robotics applications that use ROS packages.,Academia,General-purpose,anonymous,"Yes, via my email address above"
2023/12/18 8:25:34 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.,Yes,Agree,Agree,Agree,,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,Agree,,Agree,Agree,Agree,Agree,Agree,Agree,,Agree,Agree,Agree,Agree,Agree,Agree,,Agree,Agree,Agree,Agree,Agree,Agree,,Agree,Agree,Agree,Agree,Agree,Agree,,3 -- 5 years,I have worked on robotics applications that use ROS packages.,Academia,General-purpose,anonymous,"Yes, via my email address above"
2023/12/19 8:46:58 am EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,Yes,Agree,Agree,Agree,"The guideline is fundamentally sound in the context of distributed, high-availability systems. The specific methods of isolation mentioned (ROSRV and ROSMonitoring) are practical implementations of these principles in the field of robotics and distributed systems. However, the applicability and extent of these practices should be evaluated based on the specific requirements and architecture of the system in question.",Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,"You may incorporate guidelines for the use of CI/CD pipelines in the QA process. This can ensure that the code is automatically tested at every stage of development, thus identifying issues early and improving the overall quality of the software.",Fully agree,Fully agree,Fully agree,Fully agree,Agree,Fully agree,"Also consider human factors, ethical implications, and long-term sustainability of the systems. ",Fully agree,Fully agree,Fully agree,Fully agree,Agree,Fully agree,"In your future work, you should cover broader aspects of QA, including resource management, adaptability, data-driven approaches, system resilience, and ethical considerations. Integrating these elements can help in building a more robust, efficient, and reliable QA framework for ROS-based systems, ensuring they are well-prepared for real-world deployment and operation. I understand this is not in the scope of what you try to do here.",Fully agree,Fully agree,Fully agree,Agree,Agree,Agree,No,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Agree,No,1 -- 3 years,"I have contributed to ROS package(s) (e.g., development, testing)",Academia,I contributed to ROS part of my PhD work,anonymous,No
2023/12/21 4:05:44 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,Yes,Agree,Agree,Disagree,"Depending on the middleware proxy nodes or similar functionality might not be feasible.
Under certain circumstances the ROS communication is piped for instance into WebSockets (c.f. ROSBridge) at which point someone loses the option for this abstraction.

Nonetheless I agree this is very helpful!",Agree,Agree,Fully agree,Fully agree,Fully agree,Fully agree,Agree,Agree,Agree,"Other examples for constraint checking: VIATRA, Esper (for CEP)",Agree,Fully agree,Agree,Agree,Agree,Disagree,,Disagree,Agree,Agree,Agree,Agree,Fully agree,,Disagree,Agree,Disagree,Agree,Agree,Agree,,Agree,Agree,Agree,Agree,Agree,Agree,,1 -- 3 years,I have worked on robotics applications that use ROS packages.,Academia,Industrial automation,anonymous,No
2023/12/26 8:15:34 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,Yes,Fully agree,Agree,Agree,,Agree,Agree,Agree,Agree,Agree,Agree,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Agree,Agree,Disagree,Disagree,,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Fully agree,Agree,Disagree,Disagree,,5 -- 10 years,"I have contributed to ROS package(s) (e.g., development, testing)","Academia;Industry;Independent groups (e.g., Open Robotics, hobbists);Individually;IEEE RAS Student Community in my BS years",Marine robotics;Industrial automation;General-purpose,anonymous,No
2023/12/29 7:43:57 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,Yes,Agree,Agree,Agree,,Agree,Agree,Agree,Fully agree,Fully agree,Fully agree,Agree,Agree,Agree,,Fully agree,Agree,Fully agree,Agree,Agree,Agree,,Agree,Agree,Fully agree,Agree,Agree,Disagree,,Agree,Agree,Agree,Fully agree,Agree,Fully agree,,Agree,Disagree,Agree,Agree,Agree,Disagree,,1 -- 3 years,I have worked on robotics applications that use ROS packages.,"Academia;Industry;Independent groups (e.g., Open Robotics, hobbists);Individually",Service robotics;General-purpose,anonymous,"Yes, via my email address above"
2024/01/03 1:07:01 am EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,Yes,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,Fully agree,,1 -- 3 years,I have worked on robotics applications that use ROS packages.,Academia;,"Built a system to simulate an auto adaptive system, using ROS",anonymous,"Yes, via my email address above"
2024/01/04 3:48:48 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.,Yes,Agree,Fully agree,Agree,,Agree,Agree,Fully disagree,Agree,Agree,Agree,Agree,Fully agree,Disagree,,Fully agree,Fully agree,Fully agree,Disagree,Agree,Disagree,,Fully agree,Fully agree,Agree,Agree,Agree,Agree,,Agree,Fully agree,Agree,Fully agree,Fully agree,Fully agree,,Agree,Agree,Agree,Fully agree,Agree,Fully agree,,3 -- 5 years,I have worked on robotics applications that use ROS packages.,"Academia;Independent groups (e.g., Open Robotics, hobbists)",Service robotics;Industrial automation,anonymous,"Yes, via my email address above"
2024/01/05 4:49:34 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.,Yes,Agree,Agree,Disagree,,Agree,Agree,Disagree,Agree,Disagree,Disagree,Agree,Disagree,Disagree,,Agree,Agree,Disagree,Agree,Agree,Disagree,,Agree,Agree,Agree,Agree,Agree,Agree,,Agree,Agree,Disagree,Agree,Disagree,Disagree,,Agree,Agree,Agree,Agree,Agree,Agree,,1 -- 3 years,"I have contributed to ROS package(s) (e.g., development, testing)",Academia,General-purpose,anonymous,"Yes, via my email address above"
2024/01/06 11:09:23 am EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,Yes,Agree,Agree,Agree,,Disagree,Agree,Agree,Fully agree,Fully agree,Fully agree,Agree,Agree,Agree,,Agree,Agree,Agree,Agree,Agree,Agree,,Agree,Agree,Agree,Agree,Agree,Agree,,Agree,Agree,Agree,Agree,Agree,Agree,,Agree,Agree,Agree,Agree,Agree,Agree,,1 -- 3 years,"I have worked on robotics applications, but I am unsure whether they use ROS packages.",Academia,"Healthcare robotics (e.g., prosthetics, surgery);General-purpose",anonymous,"Yes, via my email address above"
2024/01/11 3:17:42 pm EET,I hereby consent to participate in this experiment. I acknowledge that participation is voluntary and I can leave at any time throughout the experiment.;I have read the instruction materials and I have access to the guidelines' overview.,Yes,Agree,Agree,Fully agree,,Fully agree,Agree,Fully agree,Agree,Fully agree,Disagree,Agree,Disagree,Fully disagree,,Agree,Fully agree,Fully disagree,Agree,Disagree,Fully disagree,,Fully agree,Fully agree,Agree,Fully agree,Fully agree,Disagree,,Fully agree,Agree,Fully agree,Fully disagree,Fully agree,Fully agree,,Fully agree,Agree,Fully agree,Fully agree,Disagree,Agree,,1 -- 3 years,I have worked on robotics applications that use ROS packages.,Academia,Service robotics;Industrial automation,anonymous,"Yes, via my email address above"
